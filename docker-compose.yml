services:
  api:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      - JWT_PUBLIC_KEY_PATH=${JWT_PUBLIC_KEY_PATH}
      - PORT=${PORT}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - CORS_WHITE_LIST=${CORS_WHITE_LIST}
      - NODE_ENV=${NODE_ENV}
    ports:
      - '${PORT}:${PORT}'
    secrets:
      - jwt_public.pem
    restart: unless-stopped
  mockauth:
    build: ./mockauth
    ports:
      - '3001:3001'
    secrets:
      - jwt_private.pem
    restart: unless-stopped
  db:
    image: postgres:16.9
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  db_data:
    driver: local

networks:
  default:
    driver: bridge

secrets:
  jwt_private.pem:
    file: ./certs/jwt_private.pem
  jwt_public.pem:
    file: ./certs/jwt_public.pem
